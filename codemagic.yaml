# codemagic.yaml
workflows:
  build-flutter-ios-app:
    name: Build Flutter iOS App
    instance_type: mac_mini_m2
    max_build_duration: 60

    environment:
      flutter: stable
      xcode: latest
      cocoapods: default

    cache:
      cache_paths:
        - $HOME/.pub-cache
        - $FCI_BUILD_DIR/ios/Pods

    scripts:
      - name: Get Flutter dependencies
        script: | 
          flutter pub get
      
      # --- FINAL COMBINED FIX IS HERE ---
      - name: Modify Podfile for modern iOS builds
        script: | 
          # 1. Set the iOS platform version to 13.0 for modern SDKs like Firebase.
          sed -i.bak "s/# platform :ios, '12.0'/platform :ios, '13.0'/" ios/Podfile

          # 2. Add `use_modular_headers!` to the Podfile. This is the standard solution
          #    for non-modular header errors with Firebase and `use_frameworks!`.
          #    It inserts the line directly after `use_frameworks!`.
          ruby -e "
          podfile_path = 'ios/Podfile'
          lines = File.readlines(podfile_path)
          target_line_index = lines.find_index { |line| line.strip.start_with?('use_frameworks!') }
          if target_line_index
            lines.insert(target_line_index + 1, \"  use_modular_headers!\\n\")
            File.write(podfile_path, lines.join)
            puts 'Successfully injected use_modular_headers! to Podfile.'
          else
            puts 'Warning: Could not find use_frameworks! in Podfile to inject modular headers.'
          end
          "
          
      - name: Install CocoaPods dependencies
        script: | 
          cd ios
          pod install

      - name: Build Flutter iOS app
        script: | 
          # You might need to clean before building after a Podfile change
          flutter clean
          flutter build ios --no-codesign
          
    artifacts:
      - build/ios/iphoneos/Runner.app